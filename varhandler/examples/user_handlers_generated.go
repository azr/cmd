// Code generated by "varhandler -func CreateUser,GetUser,UpdateUser,DeleteUser -output user_handlers_generated.go"; DO NOT EDIT

package main

import "net/http"

func CreateUserHandler(w http.ResponseWriter, r *http.Request) {
	var err error

	param0, err := HTTPUser(r)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusBadRequest, err)
		return
	}

	var status int

	status, err = CreateUser(param0)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusInternalServerError, err)
		return
	}

	if status != 0 {
		w.WriteHeader(status)
	}

}

func GetUserHandler(w http.ResponseWriter, r *http.Request) {
	var err error

	param0, err := HTTPUserID(r)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusBadRequest, err)
		return
	}

	var resp interface{}

	var status int

	resp, status, err = GetUser(param0)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusInternalServerError, err)
		return
	}

	if status != 0 {
		w.WriteHeader(status)
	}

	if resp != nil {
		HandleHTTPResponse(w, r, resp)
	}

}

func UpdateUserHandler(w http.ResponseWriter, r *http.Request) {
	var err error

	param0, err := HTTPUserID(r)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusBadRequest, err)
		return
	}

	param1, err := HTTPUser(r)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusBadRequest, err)
		return
	}

	var status int

	status, err = UpdateUser(param0, param1)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusInternalServerError, err)
		return
	}

	if status != 0 {
		w.WriteHeader(status)
	}

}

func DeleteUserHandler(w http.ResponseWriter, r *http.Request) {
	var err error

	param0, err := HTTPUserID(r)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusBadRequest, err)
		return
	}

	var status int

	status, err = DeleteUser(param0)
	if err != nil {
		HandleHTTPErrorWithDefaultStatus(w, r, http.StatusInternalServerError, err)
		return
	}

	if status != 0 {
		w.WriteHeader(status)
	}

}
